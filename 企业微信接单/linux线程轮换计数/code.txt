#include <stdio.h>
#include <pthread.h>

pthread_mutex_t mutex;
pthread_cond_t cond;
int count = 0;

void *thread1(void *arg)
{
    while (1) {
        pthread_mutex_lock(&mutex);
        while (count % 2 == 1) {
            pthread_cond_wait(&cond, &mutex);
        }
        printf("Thread 1: %d\n", count++);
        pthread_cond_signal(&cond);
        pthread_mutex_unlock(&mutex);
    }
    return NULL;
}

void *thread2(void *arg)
{
    while (1) {
        pthread_mutex_lock(&mutex);
        while (count % 2 == 0) {
            pthread_cond_wait(&cond, &mutex);
        }
        printf("Thread 2: %d\n", count++);
        pthread_cond_signal(&cond);
        pthread_mutex_unlock(&mutex);
    }
    return NULL;
}

int main()
{
    pthread_t t1, t2;

    pthread_mutex_init(&mutex, NULL);
    pthread_cond_init(&cond, NULL);

    pthread_create(&t1, NULL, thread1, NULL);
    pthread_create(&t2, NULL, thread2, NULL);

    pthread_join(t1, NULL);
    pthread_join(t2, NULL);

    pthread_mutex_destroy(&mutex);
    pthread_cond_destroy(&cond);

    return 0;
}
